<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>白嫖cloudflare实现网址短链接</title>
    <url>/archives/2.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p><font size=3>该教程为较详细的文字版，可能与视频演示顺序有所区别。</font></p>
</blockquote>
<blockquote>
<p><font size=3>原教程源自 b站up主 <a href="https://www.bilibili.com/video/BV1qB4y117q1">大c很闲</a> </font></p>
</blockquote>
<span id="more"></span>
<hr>
<img src="https://pic.imgdb.cn/item/62728a0c0947543129c78ecb.png" width="400">

<p align = "center">效果展示</p>

<p><strong><font size=3>有1G的储存还是挺不错的，除了自定义网址短链接，还有自定义文本分享链接，具体如何使用请自行研究。</font></strong></p>
<hr>
<h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><ol>
<li>先<font color=blue> 注册 </font>或<font color=blue> 登录 </font> <a href="https://dash.cloudflare.com/login">cloudflare</a> 账号</li>
<li>确保<font color=blue> cloudflare </font>账号有一个<font color=blue> 有效域名 </font> &#x2F; <font color=blue> 解析好的域名 </font> <br><br><font color=red> 注：原本在 cloudflare 上解析的域名也可以用，短连接只是用在带 www 的域名上，跟不带 www 的域名不冲突；也可以用别的域名。</font></li>
<li><font color=blue> win + R </font> 打开 <font color=blue> cmd </font>输入<font color=red> npm install -g @cloudflare&#x2F;wrangler </font>安装插件，然后输入<font color=red> wrangler login </font>自动跳转到网页点击<font color=blue> Allow </font>授权登录<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g @cloudflare/wrangler</span><br><span class="line"></span><br><span class="line">cnpm install -g @cloudflare/wrangler</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wrangler login</span><br></pre></td></tr></table></figure></li>
<li>下载 <a href="https://github.com/code-scan/cfwork_shortlink_text">Github源码</a> 并<font color=blue> 解压 </font></li>
<li>需要更改网址为<font color=blue> 公开访问 </font>，则修改<font color=blue> index.js </font>文件中的<code> admin_path </code>设置为<code> = '/' </code>；不需改默认为指定路径<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// const admin_path = &#x27;/short_link_admin&#x27;</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">const</span> admin_path = <span class="string">&#x27;/&#x27;</span></span><br></pre></td></tr></table></figure></li>
<li>回到<font color=blue> cloudflare </font>，点击<font color=blue> Workers </font>，找到<font color=blue> KV </font><font color=red>如图 1 所示 </font>；点击<font color=blue> 创建命名空间 </font>，名称为<font color=blue> <strong>shortlink</strong> </font> 或者 <strong>自定义</strong> <font color=red> 如图 2 所示 </font><img src="https://pic.imgdb.cn/item/6272a33d09475431290ffe80.png" width="200">
<p align = "center">图 1</p>
<img src="https://pic.imgdb.cn/item/6272a33d09475431290ffe88.png" width="400">
<p align = "center">图 2</p></li>
<li>复制 <font color=blue> 新创建名称的ID </font>，回到源码找到并打开<font color=blue> wrangler.toml </font>文件，更换<font color=red> id 为新创建名称的ID </font> <figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kv_namespaces</span> = [ </span><br><span class="line">  &#123; binding = <span class="string">&quot;shortlink&quot;</span>, id = <span class="string">&quot;XXXXXX&quot;</span> &#125;    <span class="comment"># XXXXXX 为需要更换的ID</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li>
<li>打开<font color=blue> cmd </font>输入<font color=red> wrangler whoami </font>查看自己账户的ID，更换<font color=blue> account_id </font>为自己的<font color=red> ID </font><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wrangler <span class="built_in">whoami</span></span><br></pre></td></tr></table></figure>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="attr">account_id</span> = <span class="string">&quot;XXXX&quot;</span>   <span class="comment"># XXXX 为需要更换用户的ID</span></span><br></pre></td></tr></table></figure></li>
<li>打开<font color=blue> cmd </font>输入<font color=red> wrangler publish </font>进行上传<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wrangler publish</span><br></pre></td></tr></table></figure></li>
<li>回到<font color=blue> cloudflare </font>，点击<font color=blue> 需要配置的域名 </font>，然后点击<font color=blue> DNS </font>，<font color=red>查看是否有 <strong>‘域名’</strong> 和 <strong>‘*’</strong> 的解析</font>；<strong>没有自行添加任意解析主机或ip</strong> <font color=red>如图 3 所示 </font><img src="https://pic.imgdb.cn/item/627340100947543129eb20bf.png" width="1000">
<p align = "center">图 3</p></li>
<li>在该域名下点击<font color=blue> Workers </font>，点击<font color=blue> 添加路由 </font>，<font color=red> 如图 4 所示 </font>配置，然后<font color=blue> 完成 </font><img src="https://pic.imgdb.cn/item/627340100947543129eb20c3.png" width="300">
<p align = "center">图 4</p></li>
<li>等上<font color=blue> 一两分钟 </font>访问 <font color=red> 域名 + &#x2F;short_link_admin </font> 即可<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">域名 + /short_link_admin</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
]]></content>
      <categories>
        <category>白嫖小技巧</category>
      </categories>
      <tags>
        <tag>白嫖</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>如何优雅的加速Github</title>
    <url>/archives/1.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p><font size=3>加速的方法有多种，这里只演示我常用的三种方法。</font></p>
</blockquote>
<p>平常我们浏览Github的时候，常常都会遇到 <strong><font color=red>服务器抽风</font></strong> 的问题，面对这些问题有下面 <strong>三种解决方法</strong> 。</p>
<span id="more"></span>
<hr>
<h1 id="Steam"><a href="#Steam" class="headerlink" title="Steam + +"></a><a href="https://steampp.net/">Steam + +</a></h1><img src="https://pic.imgdb.cn/item/624af1da239250f7c5c4ac72.png" width="500">

<p align = "center">Steam + +</p>

<p>Steam + +<br><strong>多平台Steam辅助工具箱，对于经常访问Steam社区的同学应该不陌生，Steam + +不仅可以加速 <font color=red>Steam社区</font> ，还能加速 <font color=#99A9BF> Github 、一些主流启动器 、微软商店 </font> 和 <font color=#99A9BF> P站 </font></strong>(Pixiv是一个以插图、漫画和小说、艺术为中心的社交网络服务里的虚拟社区网站) <strong>等。</strong> <em>因为Steam + + 主要面向Steam，所以这里主要说明加速Github。Steam + + 还有很多强大的功能，请自行下载体验。</em> <strong><font color=red>（第一次使用需要在软件里安装SSL证书。）</font></strong></p>
<hr>
<h1 id="UsbEAm-Hosts-Editor"><a href="#UsbEAm-Hosts-Editor" class="headerlink" title="UsbEAm Hosts Editor"></a><a href="https://www.dogfight360.com/blog/475/">UsbEAm Hosts Editor</a></h1><img src="https://pic.imgdb.cn/item/624af1da239250f7c5c4ac82.png" width="500">

<p align = "center">UsbEAm Hosts Editor</p>

<p>UsbEAm Hosts Editor<br><strong>强大的多平台加速工具 <font color=cyan>羽翼城 大佬yyds</font></strong></p>
<p><strong>使用教程：</strong></p>
<ol>
<li>选择 <font color=blue>Github - 开源社区</font> <img src="https://pic.imgdb.cn/item/624af1da239250f7c5c4ac79.png"  height="180" width="200" ></li>
<li>推荐选择 <font color=blue>上图二选一</font> <em>只测试并使用过这两个，其他请自行测试</em></li>
<li><font color=blue>检测延迟</font></li>
<li><font color=blue>应用选中</font> 选择 <strong>延迟最小</strong> <strong><font color=red>（第一次使用需要在软件里安装SSL证书）</font></strong></li>
</ol>
<hr>
<h1 id="手动配置Hosts"><a href="#手动配置Hosts" class="headerlink" title="手动配置Hosts"></a><a href="https://github.com/521xueweihan/GitHub520">手动配置Hosts</a></h1><blockquote>
<p><font size=3>第三种方法参考 <a href="https://www.bilibili.com/read/cv10607526">原文</a> ，该说明为<font color=red>修改版</font>。</font></p>
</blockquote>
<p><strong>感谢<font color=cyan> 削微寒 大佬 </font>提供解决方案</strong><br><strong>感谢<font color=cyan> Acwinuxos系统 </font>原文整理</strong></p>
<p><strong>修改教程：</strong></p>
<ul>
<li><p>点击下载<br><strong><del>点击<a href="https://cdn.jsdelivr.net/gh/521xueweihan/GitHub520@main/hosts">下载Hosts</a></del></strong><br><del><strong>作者更新了，去</strong><font color=blue> 复制粘贴 </font><strong>最新 -&gt; 2022-01-01T00:05:46+08:00</strong></del><br><del><strong>作者更新了，去</strong><font color=blue> 复制粘贴 </font><strong>最新 -&gt; 2022-01-01T20:07:29+08:00</strong></del><br><del><strong>作者更新了，去</strong><font color=blue> 复制粘贴 </font><strong>最新 -&gt; 2022-01-02T10:21:15+08:00</strong></del><br><strong>作者更新了，去</strong><font color=blue> 复制粘贴 </font><strong>最新 -&gt; 2022-01-02T14:06:24+08:00</strong><br><strong><font color=red>已停止同步更新，如需最新Hosts配置，可到作者Github查看，或使用作者提供的方法。</font></strong></p>
</li>
<li><p>复制粘贴（2022-01-02）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># GitHub520 Host Start</span><br><span class="line">140.82.112.26                 alive.github.com</span><br><span class="line">140.82.114.25                 live.github.com</span><br><span class="line">185.199.108.154               github.githubassets.com</span><br><span class="line">140.82.114.21                 central.github.com</span><br><span class="line">185.199.108.133               desktop.githubusercontent.com</span><br><span class="line">185.199.108.153               assets-cdn.github.com</span><br><span class="line">185.199.108.133               camo.githubusercontent.com</span><br><span class="line">185.199.108.133               github.map.fastly.net</span><br><span class="line">199.232.69.194                github.global.ssl.fastly.net</span><br><span class="line">140.82.113.3                  gist.github.com</span><br><span class="line">185.199.108.153               github.io</span><br><span class="line">140.82.112.4                  github.com</span><br><span class="line">192.0.66.2                    github.blog</span><br><span class="line">140.82.114.5                  api.github.com</span><br><span class="line">185.199.108.133               raw.githubusercontent.com</span><br><span class="line">185.199.108.133               user-images.githubusercontent.com</span><br><span class="line">185.199.108.133               favicons.githubusercontent.com</span><br><span class="line">185.199.108.133               avatars5.githubusercontent.com</span><br><span class="line">185.199.108.133               avatars4.githubusercontent.com</span><br><span class="line">185.199.108.133               avatars3.githubusercontent.com</span><br><span class="line">185.199.108.133               avatars2.githubusercontent.com</span><br><span class="line">185.199.108.133               avatars1.githubusercontent.com</span><br><span class="line">185.199.108.133               avatars0.githubusercontent.com</span><br><span class="line">185.199.108.133               avatars.githubusercontent.com</span><br><span class="line">140.82.113.9                  codeload.github.com</span><br><span class="line">54.231.133.17                 github-cloud.s3.amazonaws.com</span><br><span class="line">52.217.95.25                  github-com.s3.amazonaws.com</span><br><span class="line">52.216.153.172                github-production-release-asset-2e65be.s3.amazonaws.com</span><br><span class="line">52.217.199.249                github-production-user-asset-6210df.s3.amazonaws.com</span><br><span class="line">52.217.200.1                  github-production-repository-file-5c1aeb.s3.amazonaws.com</span><br><span class="line">185.199.108.153               githubstatus.com</span><br><span class="line">64.71.144.202                 github.community</span><br><span class="line">23.100.27.125                 github.dev</span><br><span class="line">185.199.108.133               media.githubusercontent.com</span><br><span class="line">185.199.108.133               cloud.githubusercontent.com</span><br><span class="line">185.199.108.133               objects.githubusercontent.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Update time: 2022-01-02T14:06:24+08:00</span><br><span class="line"># Update url: https://raw.hellogithub.com/hosts</span><br><span class="line"># Star me: https://github.com/521xueweihan/GitHub520</span><br><span class="line"># GitHub520 Host End</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li>先 <del><font color=blue>下载</font> 或</del> <font color=blue>复制</font> Hosts内容 <strong>↑ ↑ ↑</strong></li>
<li>找到 <strong>Hosts文件所在系统的目录</strong><blockquote>
<blockquote>
<p>Windows 系统： <strong>C:\Windows\System32\drivers\etc\hosts</strong><br>Linux 系统： <strong>&#x2F;etc&#x2F;hosts</strong><br>Mac（苹果电脑）系统： <strong>&#x2F;etc&#x2F;hosts</strong></p>
</blockquote>
</blockquote>
</li>
<li>把 <del><font color=blue>下载</font> 或</del> <font color=blue>复制</font> 的内容 <strong>复制到文本末尾</strong><blockquote>
<blockquote>
<p>Windows <strong>使用记事本</strong> 打开<br>Linux、Mac <strong>使用 Root 权限：sudo vi &#x2F;etc&#x2F;hosts</strong> 打开</p>
</blockquote>
</blockquote>
</li>
<li>保存后激活，<strong>刷新 DNS</strong><blockquote>
<blockquote>
<p>Windows：<strong>在 CMD 窗口输入：ipconfig &#x2F;flushdns</strong><br>Linux 命令：<strong>sudo nscd restart，<font color=red>如报错则需要安装：sudo apt install nscd 或 sudo &#x2F;etc&#x2F;init.d&#x2F;nscd restart</font></strong><br>Mac 命令：<strong>sudo killall -HUP mDNSResponder</strong></p>
</blockquote>
</blockquote>
</li>
</ol>
<p>由于作者更新较为频繁，而且作者也提供了更新Hosts配置的方法。 <del>其实是我懒</del></p>
<p><strong>作者在 <a href="https://github.com/521xueweihan/GitHub520">Github</a> 上提供了 <font color=blue>4 种</font> 更新Hosts配置的方法，这里列举 1 种。</strong><br><strong>Chrome 插件方法：</strong></p>
<ol>
<li>下载 <strong><a href="https://codeload.github.com/gauseen/faster-hosts/zip/master">FasterHosts</a></strong></li>
<li>解压后找到“<font color=blue> extension </font>”文件夹</li>
<li>打开 <strong>Chrome</strong> ，输入： <strong><font color=blue> chrome:&#x2F;&#x2F;extensions&#x2F; </font><strong>，</strong><font color=red> 这里要开启「开发者模式」 </font></strong></li>
<li>选择 <strong><font color=blue>「加载已解压的扩展程序」</font></strong> ，然后定位到刚才解压的文件夹里面的 “ <strong><font color=blue>extension</font></strong> ”文件夹， <strong><font color=blue>确定</font></strong></li>
</ol>
<hr>
<h1 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h1><p><strong>感谢<font color=cyan> X. I .U 大佬 </font>的脚本</strong><br><strong>有一种不需要额外软件加速的方法：</strong></p>
<ol>
<li>安装 <a href="https://www.tampermonkey.net/">油猴插件</a> ， <strong><font color=red> 安装正式版「Tampermonkey Stable」 </font></strong></li>
<li>安装 <a href="https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD">Github 增强</a> 脚本即可</li>
<li>一般默认即可，如需 <strong>点击切换</strong> 即可 <img src="https://pic.imgdb.cn/item/624af1da239250f7c5c4ac6a.png"  height="240" width="230" ></li>
</ol>
<hr>
<h1 id="容易遇到的问题"><a href="#容易遇到的问题" class="headerlink" title="容易遇到的问题"></a>容易遇到的问题</h1><p><strong>使用以上方法</strong>(除新增)，<strong>在本地推送到github仓库上时容易出现的问题：</strong><br><strong><code>fatal: unable to access '<a href="https://github.com/.......&#39;">https://github.com/.......&#39;</a>: OpenSSL SSL_read: Connection was reset</code></strong><br>解决方法 <font color=blue>关闭ssl验证</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.sslVerify <span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure>
<p><font size=3>重新推送即可</font></p>
<hr>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><blockquote>
<p><strong>搭建博客上传到Github仓库</strong> 或 <strong>克隆Github上的主题</strong>，推荐采用 <strong>第一种</strong> 、 <strong>第二种</strong> 和 <strong>第三种</strong> 方法。</p>
</blockquote>
<blockquote>
<p>第三种方法 Hosts 配置，这里已停止同步更新，如需最新配置可到作者Github上查看。</p>
</blockquote>
<blockquote>
<p>使用上面的方法也会概率性出现服务器抽风，不要方，你只需要刷新，等待，重启软件……</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>实用小技巧</category>
      </categories>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>把github贡献日历部署到博客上(二)</title>
    <url>/archives/3.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p><font size=3>原教程已经说得很详细了，这里演示 <em><strong>简化版</strong></em></font></p>
</blockquote>
<blockquote>
<p><font size=3>原教程源自 <a href="https://blog.csdn.net/weixin_44580076/article/details/118737615">Gainii 大佬</a></p>
</blockquote>
<span id="more"></span>
<hr>
<img src="https://ghchart.rshah.org/409ba5/12thstan" alt="12thstan's Github Chart" />

<p><strong><p align = "center">效果展示</p></strong></p>
<hr>
<h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><h2 id="直接部署"><a href="#直接部署" class="headerlink" title="直接部署"></a>直接部署</h2><ul>
<li>这里用到了 <a href="https://github.com/2016rshah/githubchart-api">2016rshah 大佬</a> 的方法。</li>
</ul>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/github用户名&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;github用户名&#x27;s Github chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://blog.csdn.net/weixin_44580076/article/details/118737615">这个方法最绝的地方是，将你自己的贡献日历变成了图片，只需要使用一行 HTML 语句，就可以在任何地方使用贡献日历。</a></li>
</ul>
<br/>

<ul>
<li>如我在当前页面下部署</li>
</ul>
<img src="https://ghchart.rshah.org/12thstan" alt="12thstan's Github chart" />

<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/12thstan&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;12thstan&#x27;s Github chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="自定义-颜色"><a href="#自定义-颜色" class="headerlink" title="自定义 颜色"></a>自定义 颜色</h2><ul>
<li>自定义 <strong>颜色</strong> <strong>#000000</strong> <em>十六进制颜色代码</em> <strong><font size="3" color="red">注意格式不带#</font></strong></li>
</ul>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/000000/github用户名&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;github用户名&#x27;s Github Chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>

<br/>

<ul>
<li><font size="3" color="blue">蓝色</font> <strong>#0000FF</strong></li>
</ul>
<img src="https://ghchart.rshah.org/0000FF/12thstan" alt="12thstan's Github Chart" />

<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/0000FF/12thstan&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;12thstan&#x27;s Github Chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li><font size="3" color="red">红色</font> <strong>#ff0000</strong></li>
</ul>
<img src="https://ghchart.rshah.org/ff0000/12thstan" alt="12thstan's Github Chart" />

<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/ff0000/12thstan&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;12thstan&#x27;s Github Chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li><font size="3" color="green">绿色</font> <strong>#00785D</strong></li>
</ul>
<img src="https://ghchart.rshah.org/00785D/12thstan" alt="12thstan's Github Chart" />

<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/00785D/12thstan&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;12thstan&#x27;s Github Chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="部署到-Next-主题"><a href="#部署到-Next-主题" class="headerlink" title="部署到 Next 主题"></a>部署到 Next 主题</h2><ul>
<li><strong>几乎全局</strong> 部署</li>
</ul>
<ol>
<li><p>修改 <strong>主题目录</strong> <code>[Blogroot]\themes\next\layout\ _layout.swig</code> <strong><font size="3" color="red">(其他版本可能叫 <code>_layout.njk</code> )</font></strong> ，<strong>在</strong> <code>&#123;% include '_partials/header/sub-menu.swig' %&#125;</code> <strong><font size="3" color="red">(其他版本可能叫 <code>sub-menu.njk</code> )</font></strong> <strong>下</strong> ， <font size="3" color="blue">添加以下内容</font> ， <strong><font size="3" color="red">注意格式</font></strong></p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">          &#123;% include &#x27;_partials/header/sub-menu.swig&#x27; %&#125;</span><br><span class="line"><span class="addition">+          &lt;!-- Github Calendar --&gt;</span></span><br><span class="line"><span class="addition">+          &#123;%- if page.type !== &#x27;categories&#x27; and page.type !== &#x27;tags&#x27; and page.type !== &#x27;schedule&#x27; and page.type !== &#x27;works&#x27; and page.type !== &#x27;about&#x27; and page.type !== &#x27;post&#x27;%&#125;</span></span><br><span class="line"><span class="addition">+            &lt;div class=&quot;post-block animated fadeIn&quot;&gt;</span></span><br><span class="line"><span class="addition">+              &lt;h5 class=&quot;post-title&quot; itemprop=&quot;name headline&quot;&gt;</span></span><br><span class="line"><span class="addition">+                &lt;!-- github用户名改自己的 --&gt;</span></span><br><span class="line"><span class="addition">+                &lt;a href=&quot;https://github.com/github用户名&quot; class=&quot;post-title-link&quot; itemprop=&quot;url&quot;&gt;Github Contribution Calendar&lt;/a&gt;</span></span><br><span class="line"><span class="addition">+              &lt;/h5&gt;</span></span><br><span class="line"><span class="addition">+              &lt;div class=&quot;post-body animated fadeInDown&quot; itemprop=&quot;articleBody&quot;&gt;</span></span><br><span class="line"><span class="addition">+                &lt;!-- 颜色默认蓝色 --&gt;</span></span><br><span class="line"><span class="addition">+                &lt;img style=&quot;width: 100%; margin-top: 30px;&quot; src=&quot;https://ghchart.rshah.org/409ba5/github用户名&quot; alt=&quot;github用户名&#x27;s Github Chart&quot; /&gt;</span></span><br><span class="line"><span class="addition">+              &lt;/div&gt;</span></span><br><span class="line"><span class="addition">+            &lt;/div&gt;</span></span><br><span class="line"><span class="addition">+          &#123;%- endif %&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改 <font size="3" color="blue">github用户为自己的</font> ，颜色默认蓝色 <em>可自定义</em> ，修改完 <font size="3" color="red">如图 1 所示</font></p>
<img src="https://pic.imgdb.cn/item/629321b30947543129224858.png"></li>
</ol>
<p align = "center">图 1</p>

<ol start="3">
<li><font size="3" color="blue">三连</font> ，即可<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<h2 id="部分自定义"><a href="#部分自定义" class="headerlink" title="部分自定义"></a>部分自定义</h2><h3 id="不在-每篇文章顶部-显示"><a href="#不在-每篇文章顶部-显示" class="headerlink" title="不在 每篇文章顶部 显示"></a>不在 <em>每篇文章顶部</em> 显示</h3><ul>
<li>需要在 <strong>每篇文章顶部都加上</strong> <code>type: "about"</code> 即可， <strong><font size="3" color="red">注意格式</font></strong><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line">title: test</span><br><span class="line">date: 2022-05-29 16:35:15</span><br><span class="line">tags:</span><br><span class="line"><span class="addition">+   type: &quot;post&quot;</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="在-关于-显示"><a href="#在-关于-显示" class="headerlink" title="在 关于 显示"></a>在 <em>关于</em> 显示</h3><ul>
<li><p>修改 <strong>新增代码这行</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if page.type !== &#x27;categories&#x27; and page.type !== &#x27;tags&#x27; and page.type !== &#x27;schedule&#x27; and page.type !== &#x27;works&#x27; and page.type !== &#x27;about&#x27; and page.type !== &#x27;post&#x27;%&#125;</span><br></pre></td></tr></table></figure>
<p>中，把 <code>page.type !== 'about' and</code> <font size="3" color="red">这句代码删掉</font> ，然后保存，<font size="3" color="blue">三连</font> 即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 删除前 --&gt;</span><br><span class="line">page.type !== &#x27;works&#x27; and page.type !== &#x27;about&#x27; and page.type !== &#x27;post&#x27;</span><br></pre></td></tr></table></figure>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- page.type !== &#x27;about&#x27; and</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 删除后 --&gt;</span><br><span class="line">page.type !== &#x27;works&#x27; and page.type !== &#x27;post&#x27;</span><br></pre></td></tr></table></figure></li>
</ul>
<br/>

<ul>
<li><font size="3" color="blue">同理</font> 在 <strong>标签</strong> 和 <strong>分类</strong> 都显示，把 <code>page.type !== 'categories' and page.type !== 'tags' and</code> <font size="3" color="red">这两句代码删除</font> 即可<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- page.type !== &#x27;categories&#x27; and page.type !== &#x27;tags&#x27; and</span></span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><blockquote>
<p>如不能使用 <strong>HTML语句</strong> 可看另一种写法 <em><a href="https://jsimple.c12th.cn/posts/3/">把github贡献日历部署到博客上(二)</a></em></p>
</blockquote>
<blockquote>
<p>第一篇 <em><a href="https://blog.c12th.cn/archives/5.html">把github贡献日历部署到博客上(一)</a></em></p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>白嫖小技巧</category>
      </categories>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Python日记 -- 百度OCR翻译</title>
    <url>/archives/4.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p><font size=3>最近写了个 <strong><font size=3 color="green">丐版</font></strong> 的 <strong>百度 OCR 翻译</strong> ，其实网络上也有很多类似的源码。</font></p>
</blockquote>
<blockquote>
<p><font size=3>该教程为 <strong><font size=3 color="green">简化版</font></strong> ，详细查看 <a href="https://ai.baidu.com/ai-doc/OCR/9kibizye4">技术文档</a> ， <strong><font size=3 color="red">支持 python 版本 2.7.+ 和 3.+ 。</font></strong> </font></p>
</blockquote>
<span id="more"></span>
<hr>
<img src="https://npm.elemecdn.com/reverse-stu-allversions@1.0.14/img/2022.6.2-1.gif" />

<p><strong><p align = "center">效果展示</p></strong></p>
<hr>
<h1 id="百度OCR"><a href="#百度OCR" class="headerlink" title="百度OCR"></a>百度OCR</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li><p><a href="https://login.bce.baidu.com/">登录</a> &#x2F; <a href="https://passport.baidu.com/v2/?reg">注册</a> 百度账号</p>
</li>
<li><p>创建 <a href="https://console.bce.baidu.com/ai/?_=1654272722032&fromai=1#/ai/ocr/app/create">通用场景OCR</a> ，<font size="3" color="blue">应用归属</font> 选择 <code>个人</code> ，<font size="3" color="blue">应用名称</font> 和 <font size="3" color="blue">应用描述</font> <strong>自定义</strong></p>
</li>
<li><p>填完以上信息后，点击 <code>立即创建</code> <strong><font size="3" color="red">(注意要实名认证)</font></strong></p>
</li>
<li><p>此时，<font size="3" color="blue">应用列表</font> 会出现 <strong>刚创建好的应用</strong> ，分别把 <code>AppID</code> 、 <code>API Key</code> 和 <code>Secret Key</code> <strong>记录好</strong> 等下用</p>
</li>
</ol>
<hr>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><ol>
<li><p>当前版本为 <font size="3" color="blue">python 3.8.1</font> <strong><font size="3" color="red">(PIL 在 python3 时，第三方库应安装 pillow)</font></strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 截图</span></span><br><span class="line"><span class="keyword">import</span> keyboard</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageGrab</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">keyboard.wait(hotkey=<span class="string">&#x27;ctrl+c&#x27;</span>)      <span class="comment"># 触发按键</span></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">0.01</span>)                    <span class="comment"># 延迟</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存图片</span></span><br><span class="line">image = ImageGrab.grabclipboard()</span><br><span class="line">image.save(<span class="string">&#x27;OCR.png&#x27;</span>)               <span class="comment"># 图片命名为&#x27;OCR.png&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 <strong>OCR Python SDK</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install baidu-aip</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 <strong>OCR</strong></p>
</li>
</ol>
<ul>
<li><p><a href="https://ai.baidu.com/ai-doc/OCR/wkibizyjk#%E6%96%B0%E5%BB%BAaipocr">配置AipOcr</a> ，把在 <strong>准备工作</strong> 获取的 <code>AppID</code> 、 <code>API Key</code> 和 <code>Secret Key</code> <font size="3" color="blue">对应填入</font></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置AipOcr</span></span><br><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipOcr</span><br><span class="line"></span><br><span class="line">APP_ID = <span class="string">&#x27;你的 App ID&#x27;</span></span><br><span class="line">API_KEY = <span class="string">&#x27;你的 Api Key&#x27;</span></span><br><span class="line">SECRET_KEY = <span class="string">&#x27;你的 Secret Key&#x27;</span></span><br><span class="line"></span><br><span class="line">client = AipOcr(APP_ID, API_KEY, SECRET_KEY)</span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="https://ai.baidu.com/ai-doc/OCR/7kibizyfm">接口说明</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_content</span>(<span class="params">filePath</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;OCR.png&#x27;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">       <span class="keyword">return</span> fp.read()</span><br><span class="line"></span><br><span class="line"> image = get_file_content(<span class="string">&#x27;OCR.png&#x27;</span>)</span><br><span class="line">	</span><br><span class="line"> <span class="comment"># 调用通用文字识别（标准版）</span></span><br><span class="line"> res_image = client.basicGeneral(image)</span><br><span class="line"> <span class="built_in">print</span>(res_image)</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>删减 + 筛选数据</strong> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;OCR.png&#x27;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">  image = fp.read()</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 调用通用文字识别（标准版）</span></span><br><span class="line">  res_image = client.basicGeneral(image)</span><br><span class="line">  <span class="comment"># print(res_image)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 筛选数据</span></span><br><span class="line">  res = res_image[<span class="string">&#x27;words_result&#x27;</span>]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">      <span class="built_in">print</span>(i[<span class="string">&#x27;words&#x27;</span>])</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h1 id="有道翻译"><a href="#有道翻译" class="headerlink" title="有道翻译"></a>有道翻译</h1><ul>
<li>用到了 <strong>爬虫</strong> ， <strong><font size="3" color="red">网上有教程，不细说</font></strong><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网址</span></span><br><span class="line">url = <span class="string">&#x27;https://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反爬</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;OUTFOX_SEARCH_USER_ID=1870252624@10.110.96.157; OUTFOX_SEARCH_USER_ID_NCOO=1338974472.751384; ___rl__test__cookies=1654489795853&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://fanyi.youdao.com/&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间戳</span></span><br><span class="line">r = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time()*<span class="number">1000</span>))</span><br><span class="line"><span class="comment"># print(r)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机数</span></span><br><span class="line">random_num = random.randint(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">i = r + <span class="built_in">str</span>(random_num)</span><br><span class="line"><span class="comment"># print(i)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">data_new</span>(<span class="params">e</span>):</span><br><span class="line">    <span class="comment"># md5</span></span><br><span class="line">    str_sign = <span class="string">&quot;fanyideskweb&quot;</span> + e + i + <span class="string">&quot;Ygy_4c=r#e#4EX^NUGUc5&quot;</span></span><br><span class="line">    md5 = hashlib.md5()</span><br><span class="line">    md5.update(str_sign.encode())</span><br><span class="line">    sign = md5.hexdigest()</span><br><span class="line">    <span class="comment"># print(sign)</span></span><br><span class="line"></span><br><span class="line">    data_old = &#123;</span><br><span class="line">        <span class="string">&#x27;i&#x27;</span>: e,</span><br><span class="line">        <span class="string">&#x27;from&#x27;</span>: <span class="string">&#x27;AUTO&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;to&#x27;</span>: <span class="string">&#x27;AUTO&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;smartresult&#x27;</span>: <span class="string">&#x27;dict&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;client&#x27;</span>: <span class="string">&#x27;fanyideskweb&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;salt&#x27;</span>: i,</span><br><span class="line">        <span class="string">&#x27;sign&#x27;</span>: sign,</span><br><span class="line">        <span class="string">&#x27;lts&#x27;</span>: r,</span><br><span class="line">        <span class="string">&#x27;bv&#x27;</span>: <span class="string">&#x27;dbf26599b4389c828cae8b896c9b0708&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;doctype&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;version&#x27;</span>: <span class="string">&#x27;2.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;keyfrom&#x27;</span>: <span class="string">&#x27;fanyi.web&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;FY_BY_REALTlME&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data_old</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">input</span>(<span class="string">&#x27;请输入需要翻译的内容：\n&#x27;</span>)</span><br><span class="line">data = data_new(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求</span></span><br><span class="line">result = requests.post(url,headers=header,data=data).text</span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据筛选</span></span><br><span class="line">dict_res = json.loads(result)</span><br><span class="line"><span class="built_in">print</span>(dict_res[<span class="string">&#x27;translateResult&#x27;</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="string">&#x27;tgt&#x27;</span>])</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><ul>
<li>增加 <strong>复制</strong> 和 <strong>弹窗</strong> 功能 <del>加了些花里胡哨的东西</del><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># copy</span></span><br><span class="line">pyperclip.copy(a + <span class="string">&#x27;\n&#x27;</span> + b)</span><br><span class="line">time.sleep(<span class="number">0.02</span>)</span><br><span class="line"><span class="comment"># 弹窗</span></span><br><span class="line">root = tk.Tk()</span><br><span class="line">root.title(<span class="string">&quot;info&quot;</span>)</span><br><span class="line">tk.Label(root, text=<span class="string">&quot;已复制&quot;</span>, ).pack()       <span class="comment"># 弹窗显示</span></span><br><span class="line">root.after(<span class="number">1000</span>, <span class="keyword">lambda</span>: root.destroy())    <span class="comment"># 停留1s</span></span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<h2 id="打包前-完整代码"><a href="#打包前-完整代码" class="headerlink" title="打包前 完整代码"></a>打包前 完整代码</h2><ol>
<li><p>演示版本为 <font size="3" color="blue">python 3.8.1</font> ， <font size="3" color="red">如出现报错请自行解决</font></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 工程：test</span></span><br><span class="line"><span class="comment"># 创建时间：2022/6/2 11:41</span></span><br><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> keyboard</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageGrab</span><br><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipOcr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取ini文件</span></span><br><span class="line">aip = <span class="string">&#x27;OCR.ini&#x27;</span></span><br><span class="line">conf = configparser.ConfigParser()</span><br><span class="line">conf.read(aip)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置AipOcr</span></span><br><span class="line">APP_ID = conf.get(<span class="string">&#x27;aip&#x27;</span>, <span class="string">&#x27;APP_ID&#x27;</span>)              <span class="comment"># 你的 App ID</span></span><br><span class="line">API_KEY = conf.get(<span class="string">&#x27;aip&#x27;</span>, <span class="string">&#x27;API_KEY&#x27;</span>)            <span class="comment"># 你的 Api Key</span></span><br><span class="line">SECRET_KEY = conf.get(<span class="string">&#x27;aip&#x27;</span>, <span class="string">&#x27;SECRET_KEY&#x27;</span>)      <span class="comment"># 你的 Secret Key</span></span><br><span class="line"></span><br><span class="line">client = AipOcr(APP_ID, API_KEY, SECRET_KEY)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment">#   --------------- 截图识别 --------------</span></span><br><span class="line">    <span class="comment"># 截图</span></span><br><span class="line">    keyboard.wait(hotkey=<span class="string">&#x27;ctrl+c&#x27;</span>)      <span class="comment"># 触发按键</span></span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">0.01</span>)                    <span class="comment"># 延迟</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存图片</span></span><br><span class="line">    image = ImageGrab.grabclipboard()</span><br><span class="line">    image.save(<span class="string">&#x27;OCR.png&#x27;</span>)               <span class="comment"># 图片命名为&#x27;OCR.png&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;识别中...&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;OCR.png&#x27;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        image = fp.read()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 调用通用文字识别（标准版）</span></span><br><span class="line">        res_image = client.basicGeneral(image)</span><br><span class="line">        <span class="comment"># print(res_image)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 筛选数据</span></span><br><span class="line">        all_text = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        res = res_image[<span class="string">&#x27;words_result&#x27;</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">            all_text += i[<span class="string">&#x27;words&#x27;</span>] + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">        a = all_text</span><br><span class="line">        <span class="built_in">print</span>(a + <span class="string">&#x27;-&#x27;</span> * <span class="number">70</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#   --------------- 有道翻译 --------------</span></span><br><span class="line">    <span class="comment"># 网址</span></span><br><span class="line">    url = <span class="string">&#x27;https://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 反爬</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: conf.get(<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;User-Agent&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;Cookie&#x27;</span>: conf.get(<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;Cookie&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://fanyi.youdao.com/&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 时间戳</span></span><br><span class="line">    r = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time() * <span class="number">1000</span>))</span><br><span class="line">    <span class="comment"># print(r)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 随机数</span></span><br><span class="line">    random_num = random.randint(<span class="number">0</span>, <span class="number">9</span>)</span><br><span class="line">    i = r + <span class="built_in">str</span>(random_num)</span><br><span class="line">    <span class="comment"># print(i)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">data_new</span>(<span class="params">e</span>):</span><br><span class="line">        <span class="comment"># md5</span></span><br><span class="line">        str_sign = <span class="string">&quot;fanyideskweb&quot;</span> + e + i + <span class="string">&quot;Ygy_4c=r#e#4EX^NUGUc5&quot;</span></span><br><span class="line">        md5 = hashlib.md5()</span><br><span class="line">        md5.update(str_sign.encode())</span><br><span class="line">        sign = md5.hexdigest()</span><br><span class="line">        <span class="comment"># print(sign)</span></span><br><span class="line"></span><br><span class="line">        data_old = &#123;</span><br><span class="line">            <span class="string">&#x27;i&#x27;</span>: e,</span><br><span class="line">            <span class="string">&#x27;from&#x27;</span>: <span class="string">&#x27;AUTO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;to&#x27;</span>: <span class="string">&#x27;AUTO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;smartresult&#x27;</span>: <span class="string">&#x27;dict&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;client&#x27;</span>: <span class="string">&#x27;fanyideskweb&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;salt&#x27;</span>: i,</span><br><span class="line">            <span class="string">&#x27;sign&#x27;</span>: sign,</span><br><span class="line">            <span class="string">&#x27;lts&#x27;</span>: r,</span><br><span class="line">            <span class="string">&#x27;bv&#x27;</span>: conf.get(<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;bv&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;doctype&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;version&#x27;</span>: <span class="string">&#x27;2.1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;keyfrom&#x27;</span>: <span class="string">&#x27;fanyi.web&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;FY_BY_REALTlME&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data_old</span><br><span class="line"></span><br><span class="line">    data = data_new(a)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请求</span></span><br><span class="line">    result = requests.post(url, headers=header, data=data).text</span><br><span class="line">    <span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 数据筛选</span></span><br><span class="line">    dict_res = json.loads(result)</span><br><span class="line">    b = dict_res[<span class="string">&#x27;translateResult&#x27;</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="string">&#x27;tgt&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(b + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># copy</span></span><br><span class="line">    pyperclip.copy(a + <span class="string">&#x27;\n&#x27;</span> + b)</span><br><span class="line">    time.sleep(<span class="number">0.02</span>)</span><br><span class="line">    <span class="comment"># 弹窗</span></span><br><span class="line">    root = tk.Tk()</span><br><span class="line">    root.title(<span class="string">&quot;info&quot;</span>)</span><br><span class="line">    tk.Label(root, text=<span class="string">&quot;已复制&quot;</span>, ).pack()       <span class="comment"># 弹窗显示</span></span><br><span class="line">    root.after(<span class="number">1000</span>, <span class="keyword">lambda</span>: root.destroy())    <span class="comment"># 停留1s</span></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>创建 <code>OCR.ini</code> 文件，<font size="3" color="blue">复制以下内容</font> ， 把在 <strong>准备工作</strong> 获取的 <code>AppID</code> 、 <code>API Key</code> 和 <code>Secret Key</code> <font size="3" color="blue">对应填入</font></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[aip]</span></span><br><span class="line"><span class="attr">APP_ID</span> = 	</span><br><span class="line"><span class="attr">API_KEY</span> = </span><br><span class="line"><span class="attr">SECRET_KEY</span> = </span><br><span class="line"></span><br><span class="line"><span class="section">[config]</span></span><br><span class="line"><span class="attr">User-Agent</span> = Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">6.1</span><span class="comment">; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Cookie</span> = OUTFOX_SEARCH_USER_ID=<span class="number">1870252624</span>@<span class="number">10.110</span>.<span class="number">96.157</span><span class="comment">; OUTFOX_SEARCH_USER_ID_NCOO=1338974472.751384; ___rl__test__cookies=1654489795853</span></span><br><span class="line"></span><br><span class="line"><span class="attr">bv</span> = dbf26599b4389c828cae8b896c9b0708</span><br></pre></td></tr></table></figure>
</li>
<li><p>最后自行打包 <strong><font size="3" color="blue">(不打包在pycharm里也能用)</font></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pyinstaller -F 文件名.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># pyinstaller -F 文件名.pyw</span></span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<h2 id="打包后-使用教程"><a href="#打包后-使用教程" class="headerlink" title="打包后 使用教程"></a>打包后 使用教程</h2><p><font size="3" ><div class="note warning flat">
            <p><strong>代码已打包上传到 <a href="https://github.com/12thstan/baidu-OCR-fanyi">github</a> 和 <a href="https://gitee.com/c12th/baidu-OCR-fanyi">gitee</a> 上</strong></p>
          </div></font></p>
<ul>
<li>打开 <code>new_OCR\dist\OCR.ini</code> 文件，把在 <strong>准备工作</strong> 获取的 <code>AppID</code> 、 <code>API Key</code> 和 <code>Secret Key</code> <font size="3" color="blue">对应填入</font> ， <strong>运行exe文件</strong> 即可<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[aip]</span></span><br><span class="line"><span class="attr">APP_ID</span> = </span><br><span class="line"><span class="attr">API_KEY</span> = </span><br><span class="line">SECRET_KEY = </span><br></pre></td></tr></table></figure></li>
</ul>
<hr>
<ul>
<li><p><font size="3" color="red">如出现闪退</font> &#x2F; <font size="3" color="blue">想换成自己的</font> , <font size="3" color="red">请</font> &#x2F; <font size="3" color="blue">可</font> 更换以下内容</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[config]</span></span><br><span class="line"><span class="attr">User-Agent</span> = </span><br><span class="line"></span><br><span class="line"><span class="attr">Cookie</span> = </span><br><span class="line"></span><br><span class="line">bv = </span><br></pre></td></tr></table></figure>
</li>
<li><p>方法如下</p>
</li>
</ul>
<ol>
<li><p><strong>F12</strong> 打开 <strong>开发者工具</strong> ，选择 <font size="3" color="blue">Network</font> ， 然后选择 <font size="3" color="red">XHR</font></p>
</li>
<li><p>在 <strong>翻译框</strong> 输入任意 <strong>文字</strong> ，<strong>页面</strong> 会出现 <font size="3" color="blue">translate_</font> <font size="3" color="red">(如有多个选最新)</font></p>
</li>
<li><p>点击 <font size="3" color="blue">translate_</font> ，在 <font size="3" color="blue">Headers</font> 页面可以找到 <code>User-Agent</code> 和 <code>Cookie</code> ,在 <font size="3" color="blue">Payload</font> 页面可以找到<code>bv</code> <strong><font size="3" color="red">(火狐浏览器的 <code>bv</code> 在请求页面)</font></strong></p>
</li>
<li><p>把找到的内容 <font size="3" color="blue">替换 ini 文件内容</font> ，<font size="3" color="red">重新运行</font> 即可</p>
</li>
<li><p>如 <strong>不清楚文字描述</strong> 可按 <font size="3" color="red">如图 1 所示</font> 步骤 即可</p>
</li>
</ol>
<img src="https://npm.elemecdn.com/reverse-stu-allversions@1.0.15/img/2022.6.2-2.gif" width="700" />

<p align = "center">图 1</p>

<hr>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><blockquote>
<p><font size="3">代码已在 <a href="https://github.com/12thstan/baidu-OCR-fanyi">github</a> 和 <a href="https://gitee.com/c12th/baidu-OCR-fanyi">gitee</a> 上开源</font></p>
</blockquote>
<blockquote>
<p><font size="3"><strong><font size="3" color="cyan">这个百度 OCR 只能翻译第一行的内容，多行无法翻译</font></strong> </font></p>
</blockquote>
<blockquote>
<p><font size="3"><p class="faa-horizontal">个人版的调用次数已经够用了，不建议多对一，建议一对一</p></font></p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
